{"version":3,"sources":["data/routes.js","components/Template/Hamburger.js","components/Template/Navigation.js","components/Template/SideBar.js","components/Template/ScrollToTop.js","layouts/Main.js","App.js","index.js"],"names":["routes","index","label","path","Menu","lazy","Hamburger","open","setOpen","useState","className","id","onClick","fallback","right","isOpen","map","l","to","Navigation","filter","SideBar","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","Main","props","titleTemplate","defaultTitle","defer","title","name","content","description","children","fullPage","defaultProps","PUBLIC_URL","process","Team","Index","NotFound","Journal","Deliverables","Coverage","Overview","App","basename","exact","component","status","StrictApp","StrictMode","rootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"6IAwBeA,MAxBA,CACb,CACEC,OAAO,EACPC,MAAO,0BACPC,KAAM,SAER,CACED,MAAO,UACPC,KAAM,SAER,CACED,MAAO,OACPC,KAAM,SAER,CACED,MAAO,UACPC,KAAM,YAER,CACED,MAAO,eACPC,KAAM,kB,OCfV,MAAMC,EAAOC,gBAAK,IAAM,mCAyCTC,MAvCG,KAChB,MAAOC,EAAMC,GAAWC,oBAAS,GAEjC,OACE,sBAAKC,UAAU,sBAAf,UACE,qBAAKA,UAAU,OAAOC,GAAG,eAAzB,SACE,6BACGJ,EACC,oBAAIG,UAAU,kBAAd,SACE,qBAAKE,QAAS,IAAMJ,GAASD,GAAOG,UAAU,aAA9C,sBAKF,oBAAIA,UAAU,iBAAd,SACE,qBAAKE,QAAS,IAAMJ,GAASD,GAAOG,UAAU,aAA9C,0BAOR,cAAC,WAAD,CAAUG,SAAU,6BAApB,SACE,cAACT,EAAD,CAAMU,OAAK,EAACC,OAAQR,EAApB,SACE,oBAAIG,UAAU,eAAd,SACGV,EAAOgB,KAAKC,GACX,6BACE,cAAC,IAAD,CAAMC,GAAID,EAAEd,KAAMS,QAAS,IAAMJ,GAASD,GAA1C,SACE,oBAAIG,UAAWO,EAAEhB,OAAS,WAA1B,SAAuCgB,EAAEf,WAFpCe,EAAEf,mBCFViB,MAxBI,IACjB,yBAAQR,GAAG,SAAX,UACE,oBAAID,UAAU,aAAd,SACGV,EACEoB,QAAQH,GAAMA,EAAEhB,QAChBe,KAAKC,GACJ,cAAC,IAAD,CAAUC,GAAID,EAAEd,KAAhB,SAAuBc,EAAEf,YAG/B,qBAAKQ,UAAU,QAAf,SACE,6BACGV,EACEoB,QAAQH,IAAOA,EAAEhB,QACjBe,KAAKC,GACJ,6BACE,cAAC,IAAD,CAAUC,GAAID,EAAEd,KAAhB,SAAuBc,EAAEf,SADlBe,EAAEf,aAMnB,cAAC,EAAD,OCJWmB,MArBC,IACd,0BAASV,GAAG,UAAZ,UACE,yBAASA,GAAG,QAAZ,SACE,iCACE,6DAIJ,0BAASD,UAAU,QAAnB,UACE,iDACA,8T,OCESY,MAVK,KAClB,MAAM,SAAEC,GAAaC,cAMrB,OAJAC,qBAAU,KACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,MCHT,MAAMK,EAAQC,GACZ,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,CACEC,cAAc,+BACdC,aAAa,0BACbC,OAAO,EAHT,UAKGH,EAAMI,OAAS,gCAAQJ,EAAMI,QAC9B,sBAAMC,KAAK,cAAcC,QAASN,EAAMO,iBAE1C,sBAAKzB,GAAG,UAAR,UACE,cAAC,EAAD,IACA,qBAAKA,GAAG,OAAR,SAAgBkB,EAAMQ,WACrBR,EAAMS,SAAW,KAAO,cAAC,EAAD,UAe/BV,EAAKW,aAAe,CAClBF,SAAU,KACVC,UAAU,EACVL,MAAO,KACPG,YAAa,wCAGAR,O,6HCvCf,MAAM,WAAEY,GAAeC,mJAKjBC,EAAOrC,gBAAK,IAAM,gCAClBsC,EAAQtC,gBAAK,IAAM,qDACnBuC,EAAWvC,gBAAK,IAAM,+BACtBwC,EAAUxC,gBAAK,IAAM,qDACrByC,EAAezC,gBAAK,IAAM,+BAC1B0C,EAAW1C,gBAAK,IAAM,+BACtB2C,EAAW3C,gBAAK,IAAM,gCAqBb4C,MAnBH,IACV,cAAC,IAAD,CAAeC,SAAUV,EAAzB,SACE,eAAC,WAAD,CAAU3B,SAAU,cAACe,EAAA,EAAD,IAApB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuB,OAAK,EAAChD,KAAK,QAAQiD,UAAWT,IACrC,cAAC,IAAD,CAAOxC,KAAK,QAAQiD,UAAWV,IAC/B,cAAC,IAAD,CAAOvC,KAAK,WAAWiD,UAAWP,IAClC,cAAC,IAAD,CAAO1C,KAAK,YAAYiD,UAAWL,IACnC,cAAC,IAAD,CAAO5C,KAAK,gBAAgBiD,UAAWN,IACvC,cAAC,IAAD,CAAO3C,KAAK,YAAYiD,UAAWJ,IACnC,cAAC,IAAD,CAAOI,UAAWR,EAAUS,OAAQ,SAEtC,cAAC,IAAD,CAAOF,OAAK,EAAChD,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUe,GAAG,iBC1BrB,MAAMoC,EAAY,IAChB,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAIEC,EAAcC,SAASC,eAAe,QAGxCF,EAAYG,gBACdC,kBAAQ,cAACN,EAAD,IAAeE,GAEvBK,iBAAO,cAACP,EAAD,IAAeE,K","file":"static/js/main.7ad93b60.chunk.js","sourcesContent":["const routes = [\n  {\n    index: true,\n    label: \"Ancient Path Adventures\",\n    path: \"/home\",\n  },\n  {\n    label: \"Project\",\n    path: \"/home\",\n  },\n  {\n    label: \"Team\",\n    path: \"/team\",\n  },\n  {\n    label: \"Journal\",\n    path: \"/journal\",\n  },\n  {\n    label: \"Deliverables\",\n    path: \"/deliverables\",\n  },\n];\n\nexport default routes;\n","import React, { Suspense, lazy, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../data/routes\";\n\nconst Menu = lazy(() => import(\"react-burger-menu/lib/menus/slide\"));\n\nconst Hamburger = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"hamburger-container\">\n      <nav className=\"main\" id=\"hambuger-nav\">\n        <ul>\n          {open ? (\n            <li className=\"menu close-menu\">\n              <div onClick={() => setOpen(!open)} className=\"menu-hover\">\n                &#10005;\n              </div>\n            </li>\n          ) : (\n            <li className=\"menu open-menu\">\n              <div onClick={() => setOpen(!open)} className=\"menu-hover\">\n                &#9776;\n              </div>\n            </li>\n          )}\n        </ul>\n      </nav>\n      <Suspense fallback={<></>}>\n        <Menu right isOpen={open}>\n          <ul className=\"hamburger-ul\">\n            {routes.map((l) => (\n              <li key={l.label}>\n                <Link to={l.path} onClick={() => setOpen(!open)}>\n                  <h3 className={l.index && \"index-li\"}>{l.label}</h3>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </Menu>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Hamburger;\n","import React from \"react\";\nimport { HashLink } from \"react-router-hash-link\";\n\nimport Hamburger from \"./Hamburger\";\nimport routes from \"../../data/routes\";\n\n// Websites Navbar, displays routes defined in 'src/data/routes'\nconst Navigation = () => (\n  <header id=\"header\">\n    <h1 className=\"index-link\">\n      {routes\n        .filter((l) => l.index)\n        .map((l) => (\n          <HashLink to={l.path}>{l.label}</HashLink>\n        ))}\n    </h1>\n    <nav className=\"links\">\n      <ul>\n        {routes\n          .filter((l) => !l.index)\n          .map((l) => (\n            <li key={l.label}>\n              <HashLink to={l.path}>{l.label}</HashLink>\n            </li>\n          ))}\n      </ul>\n    </nav>\n    <Hamburger />\n  </header>\n);\n\nexport default Navigation;\n","import React from \"react\";\n\nconst SideBar = () => (\n  <section id=\"sidebar\">\n    <section id=\"intro\">\n      <header>\n        <h2>Ancient Path Adventures</h2>\n      </header>\n    </section>\n\n    <section className=\"blurb\">\n      <h2>Project Summary</h2>\n      <p>\n        This project will create a web app that allows students/teachers to\n        access modules (videos and quizzes) by scanning a QR code in the\n        associated physical book. The QR code will take the student/teacher to\n        an AR feature to fully immerse the user in an exciting biblical\n        experience.\n      </p>\n    </section>\n  </section>\n);\n\nexport default SideBar;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// See https://reacttraining.com/react-router/web/guides/scroll-restoration/scroll-to-top\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\n\nimport Navigation from \"../components/Template/Navigation\";\nimport SideBar from \"../components/Template/SideBar\";\nimport ScrollToTop from \"../components/Template/ScrollToTop\";\n\nconst Main = (props) => (\n  <HelmetProvider>\n    <ScrollToTop />\n    <Helmet\n      titleTemplate=\"%s | Ancient Path Adventures\"\n      defaultTitle=\"Ancient Path Adventures\"\n      defer={false}\n    >\n      {props.title && <title>{props.title}</title>}\n      <meta name=\"description\" content={props.description} />\n    </Helmet>\n    <div id=\"wrapper\">\n      <Navigation />\n      <div id=\"main\">{props.children}</div>\n      {props.fullPage ? null : <SideBar />}\n    </div>\n  </HelmetProvider>\n);\n\nMain.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  fullPage: PropTypes.bool,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nMain.defaultProps = {\n  children: null,\n  fullPage: false,\n  title: null,\n  description: \"Michael D'Angelo's personal website.\",\n};\n\nexport default Main;\n","import React, { Suspense, lazy } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Main from \"./layouts/Main\"; // fallback for lazy pages\nimport \"./static/css/main.scss\"; // All of our styles\n\nconst { PUBLIC_URL } = process.env;\n\n// Every route - we lazy load so that each page can be chunked\n// NOTE that some of these chunks are very small. We should optimize\n// which pages are lazy loaded in the future.\nconst Team = lazy(() => import(\"./pages/Team\"));\nconst Index = lazy(() => import(\"./pages/Index\"));\nconst NotFound = lazy(() => import(\"./pages/NotFound\"));\nconst Journal = lazy(() => import(\"./pages/Journal\"));\nconst Deliverables = lazy(() => import(\"./pages/Deliverables\"));\nconst Coverage = lazy(() => import(\"./pages/Coverage\"));\nconst Overview = lazy(() => import(\"./pages/Overview\"));\n\nconst App = () => (\n  <BrowserRouter basename={PUBLIC_URL}>\n    <Suspense fallback={<Main />}>\n      <Switch>\n        <Route exact path=\"/home\" component={Index} />\n        <Route path=\"/team\" component={Team} />\n        <Route path=\"/journal\" component={Journal} />\n        <Route path=\"/coverage\" component={Coverage} />\n        <Route path=\"/deliverables\" component={Deliverables} />\n        <Route path=\"/overview\" component={Overview} />\n        <Route component={NotFound} status={404} />\n      </Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/home\" />\n      </Route>\n    </Suspense>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from \"react\";\nimport { hydrate, render } from \"react-dom\";\nimport App from \"./App\";\n\n// See https://reactjs.org/docs/strict-mode.html\nconst StrictApp = () => (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nconst rootElement = document.getElementById(\"root\");\n\n// hydrate is required by react-snap.\nif (rootElement.hasChildNodes()) {\n  hydrate(<StrictApp />, rootElement);\n} else {\n  render(<StrictApp />, rootElement);\n}\n"],"sourceRoot":""}